name: SPN K8s Provider Inline Test

on:
    workflow_dispatch:
        inputs:
         mode:
            description: "test"
            required: true
            default: "plan"
            type: choice
            options:
                - plan
                - plan_and_apply
                - destroy

jobs:
  spn-test:
    runs-on: [self-hosted, Linux, X64]
    env:
        ARM_USE_MSI: false
        TF_VAR_client_secret: ${{ secrets.SPN_CLIENT_SECRET }}
        # ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID}}
        # ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID}}
        # ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID}}
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Setup Kubelogin
        uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: kubelogin path
        run: |
            echo "kubelogin path: $(which kubelogin)"
            ls -l $(which kubelogin)
            kubelogin --version

      - uses: azure/setup-kubectl@v4
        id: install

      - uses: azure/login@v2
        with:
          allow-no-subscriptions: true
          creds: ${{ secrets.SPN_CREDS }}

    #   - name: cli test
    #     run: |
    #           az --version
    #           az account show

    #   - name: generate token
    #     run:  kubelogin get-token --login spn --client-id b78f544b-ede0-4ed2-8c2c-0d7474acef8c --client-secret ${{ secrets.SPN_CLIENT_SECRET }} --tenant-id 30a82846-a29e-4b6b-af27-9b19418ee1b3 --server-id 6dae42f8-4368-4678-94ff-3960e28e3630
      
    #   - name: test
    #     run:  kubelogin convert-kubeconfig -l spn --client-id b78f544b-ede0-4ed2-8c2c-0d7474acef8c --client-secret ${{ secrets.SPN_CLIENT_SECRET }}

    #   - name: test
    #     run:  kubectl get nodes -A

      - name: Terraform tf
        run: |

          cat > main.tf <<EOF
            terraform {
                required_providers {
                    kubernetes = {
                    source  = "hashicorp/kubernetes"
                    version = "~> 2.23"
                    }

                    helm = {
                    source  = "hashicorp/helm"
                    version = "~> 2.13"
                    }

                    azurerm = {
                        source  = "hashicorp/azurerm"
                        version = "~> 4.26.0"
                    }

                }

                    required_version = ">= 1.3.0"
            }

            variable "client_secret" {
                description = "SPN client secret"
                type        = string
            }
            provider "kubernetes" {
            host                   = "k8tre-k8sman-cluster-8fih11kd.privatelink.uksouth.azmk8s.io:443"
            cluster_ca_certificate = base64decode("LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQU5TT1lKQ09ySlBiUTR4WGNyUUdRb1F3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpVd05USXdNVGsxT0RJeldoZ1BNakExTlRBMU1qQXlNREE0TWpOYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCnh3RHNMaVEzcmljZExBYW0vdzcwS2dyOC9BVy9WcE40K2tYczdOK0JWMDVNbUZuRFhrSmpmc215eC94UTJiS04KNFgvbktXVnR6d1NDcElvRlhGRDlDTHk5KzB4Vlc2MmxCS3Q5RTRRY05kMUtPM0JvNjRLQWtadlhKTEhHc2xuTAo4ek5jVlJOQ0FFMHluTHZva01EcjBJa1ltVDNSQnpNLy9uWllGbHFOWUVWUUcvOU1Wczh2Rm1janlGbGIyQURXClRZdWo2Qlk2TjgrMkNlbFBjc2pZUi81d1QveWhBU2NJNnNkcGFBdVZxaW8xWjd5MHdsbDRtSXQvcTBiOVhocS8KQWVGNlRXY2J4S29kSElHY2Z2enRkRkx6NWhRU0F1ZGRTRVZzSGJmYlBZNUJZZ0lBS0d0MEE4dk9CaDNNUVhCRApPYmRoZ1ZVbEQzTmlReHgwcFNhT0RBMElzY1Fna1RReklMWHN5UU13ZGN2em1FY0lkR1MxODNYMUp3dXV0OWhtClBuRXFaaDY2WkQ1N0kxbUMvM3U5VWora3BmeG1oR3V1Y1JEY1lsaGhsek9NWCtoSmViY2NTWlNMWCticG1MSGEKVHdhUnRaRm93Z2ltWmlSLzA2Uk9QNndKWXRnN0dhV3VkbnB0WDBIWHQ4OHFIWnpReUE1R1pRRTExMUNoQ1ZiVQpxMnNWZFk4Zm5iNHFzK0NmN3NVbkJlRWU3RXZiOFM4YzJLM2VkbnZuV3dzMDVFdnhicll1Y3Nrclk5UzdEbHA0CnBxUW9SWDdBc0M1VlBoVHBzb3BqWjJSOExZdlNMZmVUTkxCdnZrVVNyMW5VSHBGbTg1STdWcVMrMVNwc2w5ODQKTG1DTWp4SmJ5cFhYVTlkTmRaK1F3bDZ2bnNhdk9VdHFjekpsaVZOeDZka0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2I3cUxEcXJoOGVrbG9aCnZ0bHRKODNsc0JUd01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRREZKd1RBOVdXOHluaFkyblFzVlBrZlhGcUMKVDlteG94RE1seFBsTEFrNUl3aHhhc0lrVldNb09pdUtEcUV2RDN5b3dyd2JtSElLdFBxVW12bE5wZkFGWlBLOQp6Z0RPYUdNQmR1UjRUZVVmNEN0TlUxTURXYjVzVTgzREtLMm52Z1JpOStIZDlBZlpPb3duejlLL25ZNVR6b2FDCjVPbmZ0VndxcnRiZVdkS2ZnN3UvU3c4K3hLTWZuWjFwSmFDZDQyZllhTnNIaG1XcDhZdWpsc01NSzBvdTQ5RTYKVXRBN0crOWhjaDJQUnFweUFOSkx3V0JrTExkeklzNVVpQ3RQM2pCaUx5T2FaU3E4d1hQUll4bjhjQWZER0JvOQpEbUQzZjBGMU1RS1pCZ05taG16RTh3aVBOSHZZaDlmKzN0YWZmYjJIaHM2Q3JuVDJRdGM2MVFSeXlBdE9jVEdQCmxaQXlXMUhqZmRMMzFKd2FnSnVjRU91cE05WVJQZWRML09wc2djSXgwTHU2Y1ptYjgzOUFpNk05Tjg4em9nRHcKWEJMTnN0M0J0OTNkd2lzQWpaaXdjL0o0cnNmZ3BhalAxQXBlcVFMaEhsa0w3OGtjWjltU0RvWVJyL0J6Wi9KSApzdWpqYXdDdnY0d1BCVE5BVXNpR0J5RWw5eTNTNkZjL1Y4c0RwR2VVcEdOV2ZWcHcwL1AyMEFCbTNaRmljMkp2CjhlamFMVk1EWFA1cEhKeWQ1NVRDVEdsV0QvcnE3bjFDV0JjMmtXd2FGbHhyaFYyNUJlOTlXbE5PY3ZrSFYrTFYKcFByV0JVZjJjUC9rSjY0UjdpSWJ4ZlhQT0hvUFovS0RyK0NNWFZLSGNZbXp2Y084ZmlWUnN5UjBmRVlxVmllTApta2VsVmh6aXFVcnRCdVN2ZGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==")

                exec {
                    api_version = "client.authentication.k8s.io/v1beta1"
                    command     = "kubelogin"
                    args        = ["get-token", "--login", "spn", 
                    "--client-id", "b78f544b-ede0-4ed2-8c2c-0d7474acef8c",
                    "--client-secret", "${{ secrets.SPN_CLIENT_SECRET }}", 
                    "--tenant-id", "30a82846-a29e-4b6b-af27-9b19418ee1b3", 
                    "--server-id", "6dae42f8-4368-4678-94ff-3960e28e3630"]
                                    
                }

            }

            resource "kubernetes_namespace" "testest" {
                metadata {
                    name = "testesttesttest"
                }
            }
          EOF

      - name: Terraform Init
        run: |
        
          terraform init

      - name: Terraform Plan
        run: |

          terraform plan

      - name: Terraform Apply
        run: |
         
          terraform apply -auto-approve
